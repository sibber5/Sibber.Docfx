name: Deploy DocFX to GitHub Pages
run-name: ${{ github.actor }} is deploying DoxFX to GitHub Pages
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v[0-9]+.[0-9]+*'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          # minimum version required by docfx is 8
          dotnet-version: '8.x'
      
      - name: Install dotnet sdk
        run: dotnet tool install -g docfx
      
      - name: Generate API metadata
        working-directory: ./docs
        run: docfx metadata ./docfx.json --warningsAsErrors
      
      - name: Build documentation
        working-directory: ./docs
        run: docfx build ./docfx.json --warningsAsErrors
      
      - working-directory: ./docs/_site
        run: rm -f index.json
      
      - working-directory: ./docs/_site
        run: mv index_ex.json index.json
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs/_site'

  deploy:
    needs: build-documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
